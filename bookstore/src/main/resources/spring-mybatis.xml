<?xml version="1.0" encoding="UTF-8"?>
   <beans xmlns="http://www.springframework.org/schema/beans"  
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
            xmlns:aop="http://www.springframework.org/schema/aop" 
            xmlns:p="http://www.springframework.org/schema/p"  
            xmlns:tx="http://www.springframework.org/schema/tx"  
            xmlns:context="http://www.springframework.org/schema/context"  
            xsi:schemaLocation="  
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
                
                
                
                
   		<!-- Properties文件读取配置，base的properties -->  
        <context:property-placeholder location="classpath:db.properties"/>  
        
        <!-- JNDI获取数据源(使用c3p0连接池) -->  
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >  
                    <property name="driverClass" value="${jdbc.driver}" />  
                    <property name="jdbcUrl" value="${jdbc.url}" />  
                    <property name="user" value="${jdbc.username}" />  
                    <property name="password" value="${jdbc.password}" />  
                    <property name="autoCommitOnClose" value="true"/>  
                    <property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>  
                    <property name="initialPoolSize" value="${cpool.minPoolSize}"/>  
                    <property name="minPoolSize" value="${cpool.minPoolSize}"/>  
                    <property name="maxPoolSize" value="${cpool.maxPoolSize}"/>  
                    <property name="maxIdleTime" value="${cpool.maxIdleTime}"/>  
                    <property name="acquireIncrement" value="${cpool.acquireIncrement}"/>  
                    <property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>  
        </bean> 
        
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
            <property name="dataSource" ref="dataSource" />  
            <property name="configLocation" value="classpath:mybatis-config.xml" />  
        </bean>  
        
         <!-- scan for mappers and let them be autowired -->  
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
            <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->  
            <property name="basePackage" value="com.bookstore.dao" />  
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        </bean>  
        
        <context:component-scan base-package="com.bookstore.dao" />  
        <context:component-scan base-package="com.bookstore.service" />  
        
        <context:annotation-config />  
        
        
        <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource" />  
        </bean> 
        
        	<!-- 声明使用注解式事务 -->
    	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
        
        <!-- <tx:advice id="txadvice" transaction-manager="transactionManager">
        	<tx:attributes>
        		<tx:method name="add*" propagation="REQUIRED"/>
        		<tx:method name="mod*" propagation="REQUIRED"/>
        		<tx:method name="del*" propagation="REQUIRED"/>
        		<tx:method name="*" propagation="REQUIRED" read-only="true" />
        	</tx:attributes>
        </tx:advice>
        
        <aop:config>
        	<aop:pointcut expression="wthin(com.bookstore.service)" id="txpointcut"/>
        	<aop:advisor advice-ref="txadvice" pointcut-ref="txpointcut"/>
        </aop:config> -->
        
   </beans>  